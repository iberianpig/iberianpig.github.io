<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Life on iberianpigsty</title><link>https://iberianpig.github.io/tags/life/</link><description>Recent content in Life on iberianpigsty</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>Copyright (c) 2014 - 2021, iberianpigsty; all rights reserved.</copyright><lastBuildDate>Mon, 30 Jan 2017 02:52:18 +0900</lastBuildDate><atom:link href="https://iberianpig.github.io/tags/life/index.xml" rel="self" type="application/rss+xml"/><item><title>記憶の定着率を上げるPocket+Kindle連携</title><link>https://iberianpig.github.io/posts/2017-01-30_information_gathering_and_its_optimization/</link><pubDate>Mon, 30 Jan 2017 02:52:18 +0900</pubDate><guid>https://iberianpig.github.io/posts/2017-01-30_information_gathering_and_its_optimization/</guid><description>日々の情報収集のフロー内で記憶定着のために自分がやっていることを書いてみた。
エビングハウスの忘却曲線 エビングハウスの忘却曲線と復習の関係に注目すると、復習は少し時間を空けておいたほうが効率が良いと言われている。
1〜2日以内にチェックして短期記憶に、1週間後に再度見直して長期記憶に持っていく作戦。
時間を空けて読むという行為をWebサービスを組み合わせてやってみる。
なお、1日以内、1週間以内、2週間以内で3度復習したほうが良いらしいが、運用効率が悪いので期間はあまり厳密にしない。
気になったらとりあえずPocketに入れる PocketはWebページを&amp;quot;後で読むリスト&amp;quot;に追加してくれるサービス。 後で見返そう、今時間ないから後で見たい、難しいから復習しよう、と思った時にここに放り投げる。 スマホアプリやChrome拡張があって、ブラウジングしながら後で読むリストに追加できる。
Pocketで見る(短期記憶) Pocketのアプリをスマホに入れる。タブレットでも良いが、いつでも持っているものがいい。
毎日の通勤時に記事をチェックする。
Kindleで記事を読む(長期記憶) P2K - Pocket to Kindleというサービスを使ってPocketの記事をKindleで読む。 配信オプションが色々ある(daily/weekly, 記事の長さ、 取得順序、 etc)が、自分は30分程度で読める分を週1回Kindleに配信している。
Kindleで読むのは週に1回（しかも長めの記事）になるので必然的にPocketに入れた時から期間が空くことになる。
週末に30分-1時間程度かけて読む。
その他 Twitterを連携させて時間差付けてフィード流したり、後で読むリストに追加したりしている
IFTTTでTwitter-&amp;gt; Pocketの連携 Twitterでいいねした記事を後で読むリストに追加する。 IFTTTでPocket -&amp;gt; Buffer連携 Pocketでスターをつけた記事をBuffer経由で#見てるタグを付けてTwitterにポストする Buffer経由することで時間を空けてツイートするので自分自身が記事を再チェック出来る 上記を取り入れた場合、3回以上同じ記事を目にすることになる。
Special Thanks [忘却曲線 - Wikipedia] (https://ja.wikipedia.org/wiki/%E5%BF%98%E5%8D%B4%E6%9B%B2%E7%B7%9A) エビングハウスの忘却曲線(ぼうきゃくきょくせん) 「記憶」の仕組みを知って効率よく学習したい…その３、短期記憶の特徴と容量について - 烏は歌う</description></item><item><title>風呂キンドルのすゝめ</title><link>https://iberianpig.github.io/posts/2017-01-24_kindle_in_the_bath/</link><pubDate>Tue, 24 Jan 2017 23:58:22 +0900</pubDate><guid>https://iberianpig.github.io/posts/2017-01-24_kindle_in_the_bath/</guid><description>風呂で読書するというのを一度やってみたかったのでやってみた。
Kindle KindleのペーパーホワイトのWifiキャンペーンモデルを使ってる。買って1年半くらいになる。 キャンペーン情報の有りのモデルのほう買ったけれど、キャンペーン情報はありがたいので特にキャンペーンなしにしなくても良い。安いし。 Kinlde PaperWhiteは最近のデバイスとは打って変わって電池持ちはすごいよくて殆んど充電しない。 測ってないけれどガラケーよりも電池持ちが断然いい。
Ziploc 防水性能をアドオンする。
ZiplocのMサイズだとちょうどよかった。ちなみにお茶っ葉を保管するのに買った。
Kindleを入れるとこうなる。奇跡のジャストサイズ。 風呂Kindleやってみた結果 意外と良かった。日々の習慣に組み込みたいレベル。
蒸気プラスビニール一枚隔てるので、視認性は若干落ちるのでフォントサイズを少しだけ大きくすれば快適に読める。
バスタブをちょっと曲げてあげて溝の部分に挟んであげるとKindleを立てるスタンドになる。手で持たなくていい。 これも快適な要因の1つ。
ただ、集中して読めるのだが、水分が持って行かれているのに気づかない。 お水を飲んだりするのにペットボトル置いておくといい。あとのぼせてしまう場合はお湯の温度を少し下げたほうがいい。
ちなみに今はホモ・サピエンス全史という本を読んでる。
ネアンデルタール人と裾野を分けたサピエンスは動物とどう違うのか、お金、会社、資本主義はどうやって成り立っているのか。
それらは全て虚構であり、それを信じなければ成り立たなかった&amp;hellip;という話。
普段読まないジャンルだけれど結構売れてるみたいで内容はすごく面白い。</description></item><item><title>Amazon Dash Buttonで出社する</title><link>https://iberianpig.github.io/posts/2016-12-18-%E3%82%A2%E3%83%9E%E3%82%BE%E3%83%B3%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%83%9C%E3%82%BF%E3%83%B3%E3%81%A7%E5%87%BA%E7%A4%BE/</link><pubDate>Sun, 18 Dec 2016 00:31:31 +0900</pubDate><guid>https://iberianpig.github.io/posts/2016-12-18-%E3%82%A2%E3%83%9E%E3%82%BE%E3%83%B3%E3%83%80%E3%83%83%E3%82%B7%E3%83%A5%E3%83%9C%E3%82%BF%E3%83%B3%E3%81%A7%E5%87%BA%E7%A4%BE/</guid><description>この記事は出社芸アドベントカレンダーの18日目の記事です。
今日のアドベントカレンダーに登録した。
現在0:31。あと23時間半くらいある！　余裕だね！　ちなみに夜開いてる喫茶店がなかったのでこの記事はHUBで書いてる。すごくうるさい。
出社時間をSlackに報告する 弊社は出社自由。リモートもOKで出社も自由。 (自分はリモートすると孤独で寂しかったりするので、旅行中以外は割と出社してる)
※詳細は出社芸アドベントカレンダー1日目出社自由の会社を作ったよ | rake enjoyをご参照。
でもルールがあって、何時ごろ出社するか(/どこで仕事するか）をSlackのチャンネルで報告する義務がある。
リモートが多い時はこんな感じになる。
自由だ…。
◯◯時頃出社しますと報告するのが面倒になってきた 出社時刻をSlackでつぶやくだけで遅れたりすることで怒られるなどは全く無い。 この会社に入ってアラームを設定することが無くなった。
起きたら何時に出社するか決めてSlackで報告すればいい。
しかし、毎日、何時になるかといちいち考えたりするのすら面倒になってくる。
プログラマは怠惰な生き物。 あのラリー・ウォールも**怠惰（Laziness）**がプログラマの美徳だと名言している。
自動化しよう 朝起きて時計を確認、何時ごろに出社するか決めて、Slackアプリを開き、報告する。 このフローを自動化する。なるべく楽に。
作戦としては今流行りのAmazon Dash Buttonを使う。 押したらSlackへ何時に行くかつぶやく。
起きたらAmazon Dash Buttonを押すだけ。俺がデリバリーされる。
準備するもの Amazon Dash Button これはAmazonで買える。500円。安い。
対象商品の初回購入時が500円割引されるので実質タダ。
なお、ものによっては到着に時間がかかるものもあるので注意。
とりあえず翌日届くレノアにした。
ローカルサーバ Amazon Dash Buttonはローカルネットワークに接続し、ボタンを押すとローカルネットワーク上にブロードキャストされる。
そのブロードキャストがAmazon Dash Buttonから来たかをMacアドレスで判断する。そうであれば任意のアクションを実行するだけ。
ボタンが押された時に任意のアクションをキャッチするのにローカルネットワーク上で動作する常時稼働サーバーが必要。
みんなのお家に眠っているラズベリーパイを使おう。
エンドポイント 任意のアクションをキャッチする場所が必要。 Slackのエンドポイントを直接作っても良いが、拡張性をもたせるため、IFTTTでエンドポイントを作る。
IFTTTのエンドポイントさえあれば、GmailでもGoogleカレンダーでも何にでも連携出来る。
実装する 処理は大きく見ると下記の様な流れになる
Amazon Dash Button ---&amp;gt; LocalServer ---&amp;gt; IFTTT ---&amp;gt; Slack IFTTTとSlackを連携する 前述したとおり、Slackとの連携部分を作る。 無料のクラウドサービスIFTTTで作る。 もっと自由にやりたいならAWS Lambdaを使おう。
エンドポイントを作る IFTTTでTriggerを作る Makerから自分でエンドポイントを作ることが出来る。</description></item></channel></rss>