<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tig on iberianpigsty</title><link>https://iberianpig.github.io/tags/tig/</link><description>Recent content in Tig on iberianpigsty</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><copyright>Copyright (c) 2014 - 2016, iberianpigsty; all rights reserved.</copyright><lastBuildDate>Sun, 02 Sep 2018 00:05:21 +0900</lastBuildDate><atom:link href="https://iberianpig.github.io/tags/tig/index.xml" rel="self" type="application/rss+xml"/><item><title>ranger-explorer.vimをアップデートした</title><link>https://iberianpig.github.io/posts/2018-09-02_make_ranger-explorer.vim/</link><pubDate>Sun, 02 Sep 2018 00:05:21 +0900</pubDate><guid>https://iberianpig.github.io/posts/2018-09-02_make_ranger-explorer.vim/</guid><description>ranger-explorer.vimというVimプラグインをアップデートした。
このアップデートでranger上の操作でVimのタブで開くか画面分割して開くかを選択できるようにした。
(あとNeovimもサポートした)
ranger-explorer.vim https://github.com/iberianpig/ranger-explorer.vim
Vimのファイラのrangerに置き換えるVimプラグイン。 Vimからrangerでカレントディレクトリを開いたり、プロジェクトルートのディレクトリを開いたりできる。 また、Vimのプロセスがネストせず、rangerの親プロセスのVimで開くようにしているのでbufferを共有することが出来る。(これが!rangerで開いた時との違い)
今回のアップデートでは rangerから Vimのタブや画面分割で開いたり出来るようにしている。
ranger rangerはCLIベースの高機能ファイラで、コマンドラインから操作できる。 hjklの移動、yyのヤンク、ddのカット、pのペーストなどVimライクな操作や、コマンドラインでの:rename、:touchなどの操作がサポートされている。
特に高速なライブプレビューが気に入っており、これだけでrangerを選択するモチベーションになっている。
rangerからタブ/画面分割で開く ranger-explorerからrangerを開いた時、Vimを開くキーバインドがrangerに自動で定義されるようにした。
&amp;lt;Ctrl-o&amp;gt;: 現在のタブ上で開く &amp;lt;Ctrl-t&amp;gt;: 新しいタブで開く &amp;lt;Ctrl-v&amp;gt;: 画面を垂直に分割して開く &amp;lt;Ctrl-s&amp;gt;: 画面を水平に分割して開く このようにrangerから分割して開くことが出来る。 動的にrangerへキーバインドを注入しているので、CLIからrangerを開いた時はこれらのキーバインドは使えず、ranger-explorerから開いた時のみタブや画面分割が出来るようになる。
また、動的にアサインするキーバインドは ~/.vimrc で下記のように上書きできる。
let g:ranger_explorer_keymap_edit = &#39;&amp;lt;C-o&amp;gt;&#39; let g:ranger_explorer_keymap_tabedit = &#39;&amp;lt;C-t&amp;gt;&#39; let g:ranger_explorer_keymap_split = &#39;&amp;lt;C-s&amp;gt;&#39; let g:ranger_explorer_keymap_vsplit = &#39;&amp;lt;C-v&amp;gt;&#39; 得意なツールに任せる 無理に全てVimプラグインで頑張るよりも得意なツールを使えば良いと考えていて、 今回の場合はディレクトリ構造を扱うのが適したツールのrangerに任せている。
特にファイルを開いたり、検索する部分は外部のCLIツールを利用している。
fzf.vim ファイル名をあいまい検索(fuzzy-finder) ranger-explorer.vim ディレクトリ階層からファイルを選択 tig-explorer.vim tigでGitの履歴から、git grepからファイルを開く どれもプレビューが高速なツールなのでVimからファイルを探すワークフローが快適になった。
異なるツールの操作に一貫性を持たせる Vimに外部ツールを利用する場合はパフォーマンスの利点もあるが、普段から使い慣れているツールを扱えるということが利点。 しかし、当然ながらツール毎に細かいキーバインドが異なる。同じ機能は同じキーバインドで扱えるようにしたいと思っていた。</description></item><item><title>tigの使い方とオプションをまとめた</title><link>https://iberianpig.github.io/posts/2016-04-22-tig%E3%82%92%E4%BD%BF%E3%81%86/</link><pubDate>Fri, 22 Apr 2016 00:00:00 +0000</pubDate><guid>https://iberianpig.github.io/posts/2016-04-22-tig%E3%82%92%E4%BD%BF%E3%81%86/</guid><description>&lt;p&gt;CUIなGitクライアント。&lt;br /&gt;
普段使いのツールだが、社内勉強会の際に改めて調べた。&lt;br /&gt;
色々と便利なオプションがあった。&lt;/p&gt;
&lt;h1 id=&#34;tigの特徴&#34;&gt;tigの特徴&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Gitクライアント&lt;/li&gt;
&lt;li&gt;CUI&lt;/li&gt;
&lt;li&gt;マルチプラットフォーム&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;tigのいいところ&#34;&gt;tigのいいところ&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;軽い&lt;/li&gt;
&lt;li&gt;インストールさえされていればX動いてなくても使える&lt;/li&gt;
&lt;li&gt;ログのツリー見て、diff見て、編集のワークフローが快適&lt;/li&gt;
&lt;li&gt;vim likeに使える&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;インストール&#34;&gt;インストール&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Linux/Windowsの人(apt使えるなら)
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install tig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Macとか
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew install tig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;基本的な使い方&#34;&gt;基本的な使い方&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;ターミナルで&lt;code&gt;tig&lt;/code&gt;とタイプで起動&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;押せばヘルプ出る&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;で閉じる&lt;/li&gt;
&lt;/ul&gt;</description></item></channel></rss>