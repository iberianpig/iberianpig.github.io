<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on iberianpigsty</title>
    <link>https://iberianpig.github.io/categories/linux/</link>
    <description>Recent content in Linux on iberianpigsty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright (c) 2014 - 2016, iberianpigsty; all rights reserved.</copyright>
    <lastBuildDate>Fri, 15 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://iberianpig.github.io/categories/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>特定のアプリケーションにスイッチするシェルスクリプトを作る</title>
      <link>https://iberianpig.github.io/posts/2016-04-15-%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AB%E3%82%A6%E3%82%A4%E3%83%B3%E3%83%89%E3%82%A6%E3%82%92%E7%A7%BB%E5%8B%95/</link>
      <pubDate>Fri, 15 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2016-04-15-%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AB%E3%82%A6%E3%82%A4%E3%83%B3%E3%83%89%E3%82%A6%E3%82%92%E7%A7%BB%E5%8B%95/</guid>
      <description>

&lt;h1 id=&#34;ブラウザとターミナルを交互に切り替えたい:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;ブラウザとターミナルを交互に切り替えたい&lt;/h1&gt;

&lt;p&gt;WEB開発している時にターミナルとChromeを行ったり来たりすることがある。
Alt-tabもあるけれど、他のウインドウが邪魔で1回Alt+tab打つのか2回やるのかわからない。&lt;/p&gt;

&lt;p&gt;特定のキー1回ででブラウザとターミナルをトグルできればベスト。&lt;/p&gt;

&lt;h2 id=&#34;xdotoolを使ってみる:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;xdotoolを使ってみる&lt;/h2&gt;

&lt;p&gt;できる事は下記があるらしい。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ウィンドウ ID の取得

&lt;ul&gt;
&lt;li&gt;名前やクラスによる検索&lt;/li&gt;
&lt;li&gt;現在アクテイブなウィンドウ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ウィンドウ ID で指定されたウィンドウの操作

&lt;ul&gt;
&lt;li&gt;リサイズ&lt;/li&gt;
&lt;li&gt;移動&lt;/li&gt;
&lt;li&gt;最小化&lt;/li&gt;
&lt;li&gt;最全面へ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;マウスイベントの模倣

&lt;ul&gt;
&lt;li&gt;マウスカーソル移動&lt;/li&gt;
&lt;li&gt;マウスクリック&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;キーイベントの模倣

&lt;ul&gt;
&lt;li&gt;文字入力&lt;/li&gt;
&lt;li&gt;ショートカットキー入力&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;NOTE: xdotoolを使い特定ウィンドウの表示をワンキーでトグル(&lt;a href=&#34;http://d.hatena.ne.jp/mooz/20101228/p&#34;&gt;http://d.hatena.ne.jp/mooz/20101228/p&lt;/a&gt;)&lt;/p&gt;

&lt;!-- more --&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$xdotool
Usage: xdotool &amp;lt;cmd&amp;gt; &amp;lt;args&amp;gt;
Available commands:
  getwindowfocus
  getwindowname
  getwindowpid
  getwindowgeometry
  getdisplaygeometry
  search
  selectwindow
  help
  version
  behave
  behave_screen_edge
  click
  getmouselocation
  key
  keydown
  keyup
  mousedown
  mousemove
  mousemove_relative
  mouseup
  set_window
  type
  windowactivate
  windowfocus
  windowkill
  windowmap
  windowminimize
  windowmove
  windowraise
  windowreparent
  windowsize
  windowunmap
  set_num_desktops
  get_num_desktops
  set_desktop
  get_desktop
  set_desktop_for_window
  get_desktop_for_window
  get_desktop_viewport
  set_desktop_viewport
  exec
  sleep
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;結構いろいろある&lt;/p&gt;

&lt;h2 id=&#34;windowidの取得:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;windowIDの取得&lt;/h2&gt;

&lt;p&gt;対象アプリケーションのWindowのIDを取得&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ xdotool search &amp;quot;byobu&amp;quot;
Defaulting to search window name, class, and classname
65011722
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;workspaceidの取得:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;workspaceIDの取得&lt;/h2&gt;

&lt;p&gt;対象のアプリケーションがどこのワークスペースにいるかを取得&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ xdotool get_desktop_for_window 65011722
0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;windowをworkspaceへのセット:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;windowをworkspaceへのセット&lt;/h2&gt;

&lt;p&gt;WindowIDが&lt;code&gt;65011722&lt;/code&gt;のWindowをWorkspace&lt;code&gt;1&lt;/code&gt;に移動させる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ xdotool set_desktop_for_window 65011722 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##実装してみる&lt;/p&gt;

&lt;p&gt;{% gist 38a7dfe61b5dc59de7f855330b7c6ab4 %}&lt;/p&gt;

&lt;p&gt;xdotoolで現在のWindowを見て、ブラウザであればターミナルを、そうでなければブラウザをアクティブにする。&lt;/p&gt;

&lt;p&gt;xbindkeysを使ってショートカットをアサイン
xbindkeys使ってなければインストールから。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xbindkeys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~/.xbindkeysrcを修正する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;/path/to/your/script/relocate_wondow.sh&amp;quot;
   Control+Shift + m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;xbindkeysを再起動&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkill xbindkeys
xbindkeys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ctrl+Shift+mでターミナルとブラウザをトグルできるようなった！&lt;/p&gt;

&lt;h1 id=&#34;その他xdotoolでやりたいこと:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;その他xdotoolでやりたいこと&lt;/h1&gt;

&lt;p&gt;他にもxdotoolでやりたいことがいくつかある。&lt;/p&gt;

&lt;h2 id=&#34;いつも指定のワークスペースにアプリをセットしたい:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;いつも指定のワークスペースにアプリをセットしたい&lt;/h2&gt;

&lt;p&gt;作業を始めるときいつも同じ配置にする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;browser | terminal | twitter/slack | calendar/todo list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記の配置をすることが多い。アプリ開いて、ワークスペース移動して、アプリ開いて…。
面倒であるので一発でワークスペースに配置したい。&lt;/p&gt;

&lt;h2 id=&#34;現在のアプリをひとつずつ隣のワークスペースに移動させたい:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;現在のアプリをひとつずつ隣のワークスペースに移動させたい&lt;/h2&gt;

&lt;p&gt;そもそもなぜこのような要望が出るかというと今のelementary OSのバグで、マルチモニタを接続した際にプライマリのワークスペースが大きく描画されてしまう謎挙動がある。
その状態でアプリケーションをドラッグで移動しようとしてもプライマリのワークスペースが隣のワークスペースの領域にかぶっていて、移動が困難になる。&lt;/p&gt;

&lt;p&gt;対処策として、一度&lt;code&gt;Super+Shift+Left&lt;/code&gt;でアプリケーションを再配置してしまえばよいのですが、ひとつずつしかワークスペースに移動させることができない。
これがとても面倒だったため、スクリプト一発で再配置できるようにしたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetoothのオン・オフをコマンドラインから切り替える</title>
      <link>https://iberianpig.github.io/posts/2016-03-20-switch-bluetooth-status-from-command-line/</link>
      <pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2016-03-20-switch-bluetooth-status-from-command-line/</guid>
      <description>

&lt;p&gt;以前、ブログで書いたAndroidのテザリング用アプリ、Easytether。
&lt;a href=&#34;http://iberianpig.github.io/blog/2015/06/07/easytether%E3%82%92linux%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/&#34;&gt;EasytetherでBluetoothテザリング&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;端末はXperia Z1f(Docomo)を使っていて、MVMOのSIMに切り替えた際に機器デフォルトのテザリング機能が利用できなくなってしまった。
EasytetherではBluetooth, USBテザリングが選択できるが、こちらはMVMOのSIMを利用しても問題なくテザリングできる。&lt;/p&gt;

&lt;h1 id=&#34;easytether使う前にbluetoothを有効にする:4f24cf1e0d357e53a60f8312f5b8ccf4&#34;&gt;Easytether使う前にBluetoothを有効にする&lt;/h1&gt;

&lt;p&gt;Easytetherを使う際にはAndroid側のBluetooth,EasyTetherを立ち上げてBluetoothテザリングを有効にし、そのあとPC側でBluetoothをパネルから有効にし、
コマンドラインで&lt;code&gt;easytether-bluetooth connect -d MAC_ADDRESS&lt;/code&gt;と入力する必要がある。&lt;/p&gt;

&lt;p&gt;結構面倒なのだ。喫茶店に来るたびにこれをやったり、携帯もって少し離れるとBluetoothは切れてしまうので、また再接続するのがダルい。
ということで以前のブログでEasyTether用にショートカットキーを割り当てたのだが、Bluetooth自体のオン、オフはまだ出来ていなかった。&lt;/p&gt;

&lt;h1 id=&#34;コマンドラインで自動化する:4f24cf1e0d357e53a60f8312f5b8ccf4&#34;&gt;コマンドラインで自動化する&lt;/h1&gt;

&lt;p&gt;少し調べてうまく行ったので、メモ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# bluetooth off
sudo hciconfig hci0 down

# bluetooth on
sudo hciconfig hci0 up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これだけ。&lt;/p&gt;

&lt;p&gt;ちなみに追記後はこちら&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

pgrep -lf easytether
ret=$?

if test ${ret} -eq 0
then
  pkill easytether -f
  sudo hciconfig hci0 down
else
  sudo hciconfig hci0 up
  sudo easytether-bluetooth MAC_ADDRESS
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみに別の起動時の省電力スクリプトの中にも&lt;code&gt;sudo hciconfig hci0 down&lt;/code&gt;を追加した。
起動時はbluetoothをオフにする設定。&lt;/p&gt;

&lt;p&gt;NFCで携帯近づけてWifi、テザリングのON/OFFまで出来たらベストなんだけれども。
(SONYのNFCタッチでBluetooth接続するUXがかなり良かったので）&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>