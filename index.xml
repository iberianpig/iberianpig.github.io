<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>iberianpigsty</title>
    <link>https://iberianpig.github.io/</link>
    <description>Recent content on iberianpigsty</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Copyright (c) 2014 - 2016, iberianpigsty; all rights reserved.</copyright>
    <lastBuildDate>Fri, 22 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://iberianpig.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>tigを使う</title>
      <link>https://iberianpig.github.io/posts/2016-04-22-tig%E3%82%92%E4%BD%BF%E3%81%86/</link>
      <pubDate>Fri, 22 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2016-04-22-tig%E3%82%92%E4%BD%BF%E3%81%86/</guid>
      <description>

&lt;p&gt;CUIなGitクライアント。社内勉強会のために少し調べた。&lt;br /&gt;
調べると色々と便利なオプションがあった。&lt;/p&gt;

&lt;h1 id=&#34;tigの特徴:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;tigの特徴&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Gitクライアント&lt;/li&gt;
&lt;li&gt;CUI&lt;/li&gt;
&lt;li&gt;マルチプラットフォーム&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;tigのいいところ:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;tigのいいところ&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;軽い&lt;/li&gt;
&lt;li&gt;インストールさえされていればX動いてなくても使える&lt;/li&gt;
&lt;li&gt;ログのツリー見て、diff見て、編集のワークフローが快適&lt;/li&gt;
&lt;li&gt;vim likeに使える&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;インストール:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;インストール&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Linux/Windowsの人(apt使えるなら)

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sudo apt-get install tig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Macとか

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;brew install tig&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;基本的な使い方:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;基本的な使い方&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ターミナルで&lt;code&gt;tig&lt;/code&gt;とタイプで起動&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;押せばヘルプ出る&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;で閉じる&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;vim-likeなキーバインド:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;vim likeなキーバインド&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;, &lt;code&gt;k&lt;/code&gt;で上下移動&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt;で検索&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;コミットログ見るとき:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;コミットログ見るとき&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;ブランチの枝分かれが見やすい&lt;/li&gt;
&lt;li&gt;Enterで分割して、左がコミットログ、右がDiffが見れる&lt;/li&gt;
&lt;li&gt;Diff見ながら&lt;code&gt;&amp;lt;C-n&amp;gt;&lt;/code&gt;(next),&lt;code&gt;&amp;lt;C-p&amp;gt;&lt;/code&gt;(previous)でコミット親・子を辿れる&lt;/li&gt;
&lt;li&gt;Diffでカーソルがあたっている時、&lt;code&gt;e&lt;/code&gt;(edit)で該当箇所をエディタで編集できる&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;git-logの代わりに:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;git logの代わりに&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;: tigのlog view

&lt;ul&gt;
&lt;li&gt;git log&lt;/li&gt;
&lt;li&gt;エンター押せばdiffも見える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;m&lt;/code&gt;: tigのmain view

&lt;ul&gt;
&lt;li&gt;一番使う&lt;/li&gt;
&lt;li&gt;ツリー綺麗&lt;/li&gt;
&lt;li&gt;エンター押せばdiffも見える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;git-diffの代わりに:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;git diffの代わりに&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;: tigのdiff view

&lt;ul&gt;
&lt;li&gt;gitdiff同様、diffが見れる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git diff &amp;lt;コミットID&amp;gt; &amp;lt;コミットID&amp;gt;&lt;/code&gt;だとコミット間でdiff見れるけど、tigは1つ1つのコミット毎にDiffが出るのでちょっと使い勝手が異なる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tig &amp;lt;コミットID&amp;gt;..&amp;lt;コミットID&amp;gt;&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;コミットIDからコミットIDまでの履歴のみDiffが出る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;git-statusの代わりに:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;git statusの代わりに&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;s, S&lt;/code&gt;: tigのstatus view

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;: ステージング/アンステージング&lt;/li&gt;
&lt;li&gt;1ファイル内に複数の変更がある場合はdiff viewで&lt;code&gt;u&lt;/code&gt;で部分的にステージングできる&lt;/li&gt;
&lt;li&gt;&lt;code&gt;!&lt;/code&gt;: ワーキングスペースから取り除く(アンステージング状態のものに限る)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;git-branchの代わりに:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;git branchの代わりに&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;: tigのbranch View

&lt;ul&gt;
&lt;li&gt;ブランチが見れる&lt;/li&gt;
&lt;li&gt;エンター押すと分割されて、該当ブランチを中心としたグラフが見える&lt;/li&gt;
&lt;li&gt;.tigrc入れて改造すると捗る&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;git-grepの代わりに:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;git grepの代わりに&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tig grep &amp;lt;検索文字列&amp;gt;&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;grepされた結果が出る&lt;/li&gt;
&lt;li&gt;エンター押すと周辺ソースが見れる&lt;/li&gt;
&lt;li&gt;eで該当箇所をエディタで開ける&lt;/li&gt;
&lt;li&gt;syntax highlightが効かないところを除けば意外と便利&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;git-blameの代わりに:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;git blameの代わりに&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;/&lt;code&gt;tig blame &amp;lt;ファイル名&amp;gt;&lt;/code&gt; : tigのblame view

&lt;ul&gt;
&lt;li&gt;blameしたあと開いたコミットに&lt;code&gt;b&lt;/code&gt;で再帰的にblameできるので、どういうコンテキストで変更されたのかわかったりする&lt;/li&gt;
&lt;li&gt;ちなみに&lt;code&gt;&amp;lt;&lt;/code&gt;で戻れる&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;その他知っておくと捗る事:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;その他知っておくと捗る事&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;tig --all&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;リモート含めた全ブランチが見える&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;でbranch Viwe上の&lt;code&gt;All references&lt;/code&gt;選択時と同じ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tig [&amp;lt;ファイル名&amp;gt;, &amp;lt;ディレクトリ名&amp;gt;]&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;ファイルorディレクトリが関わる履歴のみが見える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tig [&amp;lt;ブランチ名&amp;gt;, &amp;lt;他のブランチ名&amp;gt;]&lt;/code&gt;

&lt;ul&gt;
&lt;li&gt;対象ブランチに関わる履歴のみが見える&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;バッファの内容を更新したいときは&lt;code&gt;R&lt;/code&gt;でリロード&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;tigrcを弄ってカスタマイズ:8ebafd3d13ec9d4030b2b6d9b8ec694c&#34;&gt;~/.tigrcを弄ってカスタマイズ&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-tigrc&#34;&gt;# main-viewの左端にコミットIDを表示する
set main-view = id date author commit-title:graph=yes,refs=yes

# # Visualization
set id-width = 8
set blame-options = -C -C -C
set horizontal-scroll = 33%
set show-notes = yes
set show-changes = yes
set split-view-height = 80%
set status-untracked-dirs = yes
set tab-size = 2
set diff-context = 3
set ignore-space = some
set commit-order = topo
set ignore-case = yes
set wrap-lines = yes
set focus-child = yes

# Bind Settings
bind generic &amp;lt;C-f&amp;gt; move-page-down
bind generic &amp;lt;C-b&amp;gt; move-page-up
bind generic g move-first-line
bind main    G  none
bind main    G  move-last-line
bind generic G  move-last-line

# revertを定義
bind main v !?git revert %(commit)
bind diff v !?git revert %(commit)
bind main V !?git revert %(prompt) %(commit)
bind diff V !?git revert %(prompt) %(commit)

bind generic F none
bind generic F !git fe # git fetch

bind branch C !git co -b %(prompt) %(branch)
bind branch P !git push origin %(branch)
bind branch L !git pull origin %(branch)
bind branch H !git-browse-remote %(branch)

bind generic M none
bind branch M none
bind branch M !git merge %(branch)

bind status C !git commit -v

# `-` でステージ・アンステージをスイッチ
bind status u none
bind status - status-update
bind stage u none
bind stage - status-update
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;ショートカットをアサインする

&lt;ul&gt;
&lt;li&gt;view毎にアサインできるので色々仕込める&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;カラーテーマを変える

&lt;ul&gt;
&lt;li&gt;あまりテーマは見つからない。しかし、デフォルトが綺麗なのでそこまで必要性は感じていない&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>特定のアプリケーションにスイッチするシェルスクリプトを作る</title>
      <link>https://iberianpig.github.io/posts/2016-04-15-%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AB%E3%82%A6%E3%82%A4%E3%83%B3%E3%83%89%E3%82%A6%E3%82%92%E7%A7%BB%E5%8B%95/</link>
      <pubDate>Fri, 15 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2016-04-15-%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E3%81%A7%E6%8C%87%E5%AE%9A%E3%81%97%E3%81%9F%E3%83%AF%E3%83%BC%E3%82%AF%E3%82%B9%E3%83%9A%E3%83%BC%E3%82%B9%E3%81%AB%E3%82%A6%E3%82%A4%E3%83%B3%E3%83%89%E3%82%A6%E3%82%92%E7%A7%BB%E5%8B%95/</guid>
      <description>

&lt;h1 id=&#34;ブラウザとターミナルを交互に切り替えたい:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;ブラウザとターミナルを交互に切り替えたい&lt;/h1&gt;

&lt;p&gt;WEB開発している時にターミナルとChromeを行ったり来たりすることがある。
Alt-tabもあるけれど、他のウインドウが邪魔で1回Alt+tab打つのか2回やるのかわからない。&lt;/p&gt;

&lt;p&gt;特定のキー1回ででブラウザとターミナルをトグルできればベスト。&lt;/p&gt;

&lt;h2 id=&#34;xdotoolを使ってみる:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;xdotoolを使ってみる&lt;/h2&gt;

&lt;p&gt;できる事は下記があるらしい。&lt;/p&gt;

&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;ウィンドウ ID の取得

&lt;ul&gt;
&lt;li&gt;名前やクラスによる検索&lt;/li&gt;
&lt;li&gt;現在アクテイブなウィンドウ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;ウィンドウ ID で指定されたウィンドウの操作

&lt;ul&gt;
&lt;li&gt;リサイズ&lt;/li&gt;
&lt;li&gt;移動&lt;/li&gt;
&lt;li&gt;最小化&lt;/li&gt;
&lt;li&gt;最全面へ&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;マウスイベントの模倣

&lt;ul&gt;
&lt;li&gt;マウスカーソル移動&lt;/li&gt;
&lt;li&gt;マウスクリック&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;キーイベントの模倣

&lt;ul&gt;
&lt;li&gt;文字入力&lt;/li&gt;
&lt;li&gt;ショートカットキー入力&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;NOTE: xdotoolを使い特定ウィンドウの表示をワンキーでトグル(&lt;a href=&#34;http://d.hatena.ne.jp/mooz/20101228/p&#34;&gt;http://d.hatena.ne.jp/mooz/20101228/p&lt;/a&gt;)&lt;/p&gt;

&lt;!-- more --&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$xdotool
Usage: xdotool &amp;lt;cmd&amp;gt; &amp;lt;args&amp;gt;
Available commands:
  getwindowfocus
  getwindowname
  getwindowpid
  getwindowgeometry
  getdisplaygeometry
  search
  selectwindow
  help
  version
  behave
  behave_screen_edge
  click
  getmouselocation
  key
  keydown
  keyup
  mousedown
  mousemove
  mousemove_relative
  mouseup
  set_window
  type
  windowactivate
  windowfocus
  windowkill
  windowmap
  windowminimize
  windowmove
  windowraise
  windowreparent
  windowsize
  windowunmap
  set_num_desktops
  get_num_desktops
  set_desktop
  get_desktop
  set_desktop_for_window
  get_desktop_for_window
  get_desktop_viewport
  set_desktop_viewport
  exec
  sleep
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;結構いろいろある&lt;/p&gt;

&lt;h2 id=&#34;windowidの取得:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;windowIDの取得&lt;/h2&gt;

&lt;p&gt;対象アプリケーションのWindowのIDを取得&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ xdotool search &amp;quot;byobu&amp;quot;
Defaulting to search window name, class, and classname
65011722
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;workspaceidの取得:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;workspaceIDの取得&lt;/h2&gt;

&lt;p&gt;対象のアプリケーションがどこのワークスペースにいるかを取得&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ xdotool get_desktop_for_window 65011722
0
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;windowをworkspaceへのセット:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;windowをworkspaceへのセット&lt;/h2&gt;

&lt;p&gt;WindowIDが&lt;code&gt;65011722&lt;/code&gt;のWindowをWorkspace&lt;code&gt;1&lt;/code&gt;に移動させる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ xdotool set_desktop_for_window 65011722 1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;##実装してみる&lt;/p&gt;

&lt;p&gt;{% gist 38a7dfe61b5dc59de7f855330b7c6ab4 %}&lt;/p&gt;

&lt;p&gt;xdotoolで現在のWindowを見て、ブラウザであればターミナルを、そうでなければブラウザをアクティブにする。&lt;/p&gt;

&lt;p&gt;xbindkeysを使ってショートカットをアサイン
xbindkeys使ってなければインストールから。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xbindkeys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;~/.xbindkeysrcを修正する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;/path/to/your/script/relocate_wondow.sh&amp;quot;
   Control+Shift + m
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;xbindkeysを再起動&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;pkill xbindkeys
xbindkeys
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ctrl+Shift+mでターミナルとブラウザをトグルできるようなった！&lt;/p&gt;

&lt;h1 id=&#34;その他xdotoolでやりたいこと:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;その他xdotoolでやりたいこと&lt;/h1&gt;

&lt;p&gt;他にもxdotoolでやりたいことがいくつかある。&lt;/p&gt;

&lt;h2 id=&#34;いつも指定のワークスペースにアプリをセットしたい:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;いつも指定のワークスペースにアプリをセットしたい&lt;/h2&gt;

&lt;p&gt;作業を始めるときいつも同じ配置にする。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;browser | terminal | twitter/slack | calendar/todo list
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;上記の配置をすることが多い。アプリ開いて、ワークスペース移動して、アプリ開いて…。
面倒であるので一発でワークスペースに配置したい。&lt;/p&gt;

&lt;h2 id=&#34;現在のアプリをひとつずつ隣のワークスペースに移動させたい:5dbe9927ab3915e7be0f4259c8c818ab&#34;&gt;現在のアプリをひとつずつ隣のワークスペースに移動させたい&lt;/h2&gt;

&lt;p&gt;そもそもなぜこのような要望が出るかというと今のelementary OSのバグで、マルチモニタを接続した際にプライマリのワークスペースが大きく描画されてしまう謎挙動がある。
その状態でアプリケーションをドラッグで移動しようとしてもプライマリのワークスペースが隣のワークスペースの領域にかぶっていて、移動が困難になる。&lt;/p&gt;

&lt;p&gt;対処策として、一度&lt;code&gt;Super+Shift+Left&lt;/code&gt;でアプリケーションを再配置してしまえばよいのですが、ひとつずつしかワークスペースに移動させることができない。
これがとても面倒だったため、スクリプト一発で再配置できるようにしたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bluetoothのオン・オフをコマンドラインから切り替える</title>
      <link>https://iberianpig.github.io/posts/2016-03-20-switch-bluetooth-status-from-command-line/</link>
      <pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2016-03-20-switch-bluetooth-status-from-command-line/</guid>
      <description>

&lt;p&gt;以前、ブログで書いたAndroidのテザリング用アプリ、Easytether。
&lt;a href=&#34;http://iberianpig.github.io/blog/2015/06/07/easytether%E3%82%92linux%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/&#34;&gt;EasytetherでBluetoothテザリング&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;端末はXperia Z1f(Docomo)を使っていて、MVMOのSIMに切り替えた際に機器デフォルトのテザリング機能が利用できなくなってしまった。
EasytetherではBluetooth, USBテザリングが選択できるが、こちらはMVMOのSIMを利用しても問題なくテザリングできる。&lt;/p&gt;

&lt;h1 id=&#34;easytether使う前にbluetoothを有効にする:4f24cf1e0d357e53a60f8312f5b8ccf4&#34;&gt;Easytether使う前にBluetoothを有効にする&lt;/h1&gt;

&lt;p&gt;Easytetherを使う際にはAndroid側のBluetooth,EasyTetherを立ち上げてBluetoothテザリングを有効にし、そのあとPC側でBluetoothをパネルから有効にし、
コマンドラインで&lt;code&gt;easytether-bluetooth connect -d MAC_ADDRESS&lt;/code&gt;と入力する必要がある。&lt;/p&gt;

&lt;p&gt;結構面倒なのだ。喫茶店に来るたびにこれをやったり、携帯もって少し離れるとBluetoothは切れてしまうので、また再接続するのがダルい。
ということで以前のブログでEasyTether用にショートカットキーを割り当てたのだが、Bluetooth自体のオン、オフはまだ出来ていなかった。&lt;/p&gt;

&lt;h1 id=&#34;コマンドラインで自動化する:4f24cf1e0d357e53a60f8312f5b8ccf4&#34;&gt;コマンドラインで自動化する&lt;/h1&gt;

&lt;p&gt;少し調べてうまく行ったので、メモ。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;# bluetooth off
sudo hciconfig hci0 down

# bluetooth on
sudo hciconfig hci0 up
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これだけ。&lt;/p&gt;

&lt;p&gt;ちなみに追記後はこちら&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/sh

pgrep -lf easytether
ret=$?

if test ${ret} -eq 0
then
  pkill easytether -f
  sudo hciconfig hci0 down
else
  sudo hciconfig hci0 up
  sudo easytether-bluetooth MAC_ADDRESS
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ちなみに別の起動時の省電力スクリプトの中にも&lt;code&gt;sudo hciconfig hci0 down&lt;/code&gt;を追加した。
起動時はbluetoothをオフにする設定。&lt;/p&gt;

&lt;p&gt;NFCで携帯近づけてWifi、テザリングのON/OFFまで出来たらベストなんだけれども。
(SONYのNFCタッチでBluetooth接続するUXがかなり良かったので）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mysqlで特定のテーブルのDumpをのみ取得する</title>
      <link>https://iberianpig.github.io/posts/2015-09-01-mysql%E3%81%A7%E4%BB%96%E7%92%B0%E5%A2%83%E3%81%A7%E7%89%B9%E5%AE%9A%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%81%AEdump%E3%82%92%E3%81%A8%E3%81%A3%E3%81%A6%E6%9C%AC%E7%95%AA%E7%92%B0%E5%A2%83%E3%81%AB%E6%B5%81%E3%81%97%E8%BE%BC%E3%81%BF%E3%81%9F%E3%81%84/</link>
      <pubDate>Sat, 23 Jan 2016 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-09-01-mysql%E3%81%A7%E4%BB%96%E7%92%B0%E5%A2%83%E3%81%A7%E7%89%B9%E5%AE%9A%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E3%81%AEdump%E3%82%92%E3%81%A8%E3%81%A3%E3%81%A6%E6%9C%AC%E7%95%AA%E7%92%B0%E5%A2%83%E3%81%AB%E6%B5%81%E3%81%97%E8%BE%BC%E3%81%BF%E3%81%9F%E3%81%84/</guid>
      <description>

&lt;h1 id=&#34;必要となった背景:70a73770871b0e628cc7fededae2078d&#34;&gt;必要となった背景&lt;/h1&gt;

&lt;p&gt;1つのコンテンツに対してそのコンテンツに含まれる複数のカテゴリの組み合わせを元におすすめのコンテンツを表示する。&lt;br /&gt;
動的に表示させようとしたが、現行のままでは動的に出すのは厳しく、バッチ処理でおすすめコンテンツの情報をキャッシュすることにした。&lt;br /&gt;
&lt;!-- more --&gt;
本番環境の裏側で実行させようと考えたが、非常に遅く、１ヶ月ほど時間がかかってしまうため、
一度本番のDumpを取得した上で別の環境でバッチを回し、その結果を本番環境へロードさせたほうが良いということになった。&lt;/p&gt;

&lt;h1 id=&#34;テーブル別のdump:70a73770871b0e628cc7fededae2078d&#34;&gt;テーブル別のDump&lt;/h1&gt;

&lt;p&gt;いつもDB一括でMySQL workbenchでDumpを取得しているなど、mysqlコマンドに疎い。
今回は他のテーブルは必要なかったので、必要なテーブルのDumpのみを取得する方法を調べた。&lt;/p&gt;

&lt;p&gt;下記コマンドでDumpを取得する。複数テーブルの場合は続けてテーブル名を入力すればよい。
また、今回の本番環境、隔離環境はRailsを利用しており、migrationにて既にテーブルが作成されている。&lt;br /&gt;
そのため&lt;code&gt;-t&lt;/code&gt;オプションにてCREATE TABLE文をスキップさせる&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mysqldump -u &amp;lt;USERNAME&amp;gt; -p -t &amp;lt;DBNAME&amp;gt; &amp;lt;TABLENAME1&amp;gt; [ &amp;lt;TABLENAME2&amp;gt; ... ] &amp;gt; &amp;lt;DUMPFILENAME&amp;gt;.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;dumpのインポート:70a73770871b0e628cc7fededae2078d&#34;&gt;Dumpのインポート&lt;/h1&gt;

&lt;p&gt;下記コマンドでインポート&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;mysqll -u &amp;lt;USERNAME&amp;gt; -p &amp;lt;DBNAME&amp;gt; &amp;lt; &amp;lt;DUMPFILENAME&amp;gt;.sql
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;special-thanks:70a73770871b0e628cc7fededae2078d&#34;&gt;Special Thanks&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://easyramble.com/backup-only-mysql-tables.html&#34;&gt; MySQL で特定のテーブルのみをバックアップ - Easy Ramble &lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>会社のPCのWindowsマシンにLubuntuを入れてきた</title>
      <link>https://iberianpig.github.io/posts/2015-09-17-%E4%BC%9A%E7%A4%BE%E3%81%AEpc%E3%81%AEwindows%E3%83%9E%E3%82%B7%E3%83%B3%E3%81%ABlubuntu%E3%82%92%E5%85%A5%E3%82%8C%E3%81%A6%E3%81%8D%E3%81%9F/</link>
      <pubDate>Thu, 17 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-09-17-%E4%BC%9A%E7%A4%BE%E3%81%AEpc%E3%81%AEwindows%E3%83%9E%E3%82%B7%E3%83%B3%E3%81%ABlubuntu%E3%82%92%E5%85%A5%E3%82%8C%E3%81%A6%E3%81%8D%E3%81%9F/</guid>
      <description>

&lt;p&gt;Webライターさん向けにChromeとOfficeツールが使える格安環境が欲しいとのことで、同僚が買ってきた1万5000円のWindowsPC。
デフォルトで入っている(おそらくkitting時に自動で入る)セキュリティツールが悪さをしてまともにブラウジングができなかった。&lt;br /&gt;
その要件であれば、lubuntu(軽量版GUIを備えたUbuntuベースのLinuxディストリビューション)を使えばよいだろうということで、
3時間くらいかけてセットアップした時の備忘録。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;winowspcにlubuntuを入れる:7b68551a6d82d1888f6bc75cab6484f7&#34;&gt;WinowsPCにlubuntuを入れる&lt;/h1&gt;

&lt;ol&gt;
&lt;li&gt;Windowsのコンピュータを起動し、コントロールパネルから&amp;rdquo;ディスクの管理&amp;rdquo;を表示する&lt;/li&gt;
&lt;li&gt;&amp;ldquo;ディスクの管理&amp;rdquo;の画面の写真を取る（スクショはだめ。インストール中に見れない）

&lt;ul&gt;
&lt;li&gt;今回はDドライブの内容が空だったので、Lubuntu側でDドライブをフォーマットすることにする。&lt;/li&gt;
&lt;li&gt;Dドライブのディスク空き容量68.43GB。Dドライブの容量の数値を確認しておく。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;UnetBootInDiskでLinuxをブート可能なUSBメモリを作る&lt;/li&gt;
&lt;li&gt;メーカーロゴでF12連打でブートメニューに入って、USBメニューを選択（なければBIOS設定画面に入ってから設定を変更する)。&lt;/li&gt;
&lt;li&gt;Try Installを選択。&lt;/li&gt;
&lt;li&gt;言語で日本語を選択。&lt;/li&gt;
&lt;li&gt;ネットワーク（Wifi）に接続できるので、接続（あとでもできるがこのタイミングのほうが失敗が少ない）&lt;/li&gt;
&lt;li&gt;インストール中にアップデートをダウンロードする、サードパーティ製のソフトウェアをインストールの両方にチェック&lt;/li&gt;
&lt;li&gt;インストールの種類で”それ以外”を選択&lt;/li&gt;
&lt;li&gt;ブートローダをインストールするデバイスに/dev/sda(ディスクの大元)を選択。&lt;/li&gt;
&lt;li&gt;Dドライブの存在していた&lt;code&gt;/dev/sda4/&lt;/code&gt;(ディスクの管理でとった写真を参照）を選択し、&lt;code&gt;-&lt;/code&gt;をクリック。&lt;/li&gt;
&lt;li&gt;空き領域を選択、 + をクリック。論理パーティションを選択。ext4ジャーナリングシステムを選択。マウントポイントに&amp;rdquo;/&amp;ldquo;を選択。

&lt;ul&gt;
&lt;li&gt;これで論理パーティション内部に複数のパーティションが作成可能になる。&lt;/li&gt;
&lt;li&gt;スワップ領域を作らなくてよいかとの画面が出るが、無視してよい。あとで追加する。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;マシン名とユーザ名とパスワードを設定する。Windows側と同じユーザ名、パスワードを利用。&lt;/li&gt;
&lt;li&gt;タイムゾーンはTokyoに。キーボードは日本語に設定する。&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&#34;lubuntuをセットアップする:7b68551a6d82d1888f6bc75cab6484f7&#34;&gt;Lubuntuをセットアップする&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;スワップを有効化

&lt;ul&gt;
&lt;li&gt;USBからtry without installを選択&lt;/li&gt;
&lt;li&gt;gpartedを利用して論理パーティション内1GBのスワップを作る。swap領域の&lt;code&gt;/dev/sdxx&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;fstabを&lt;code&gt;sudo vi /etc/fstab&lt;/code&gt;にて編集。 ( &lt;a href=&#34;http://linuxsalad.blogspot.jp/2009/05/swap.html&#34;&gt;http://linuxsalad.blogspot.jp/2009/05/swap.html&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;再起動して&lt;code&gt;gparted&lt;/code&gt;上でスワップオンになっていることを確認&lt;/li&gt;
&lt;li&gt;swapがないとたまにフリーズしたりするので早めに設定しておくこと&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;日本語を入力できるようにする

&lt;ul&gt;
&lt;li&gt;Ctrl-Spaceで日本語入力可能。ibus-anthyが使える。&lt;/li&gt;
&lt;li&gt;変換精度のより良いibus-mozc(Google日本語入力)を入れる。コマンドは&lt;code&gt;sudo-apt-get install ibus-mozc&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;キーボードインプットメソッドでibus-mozcを追加。&lt;/li&gt;
&lt;li&gt;インプットメソッドの切替キーを半角に設定する（hankakuを追加割り当てする)。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;GoogleChromeを入れる(firefox起動してそこから検索してインストールする)&lt;/li&gt;
&lt;li&gt;LibreOffice(OpenOfficeのすごいやつ)を入れる&lt;/li&gt;
&lt;li&gt;よく使いそうなソフトはデスクトップにショートカットを置く

&lt;ul&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;ファイルマネージャ&lt;/li&gt;
&lt;li&gt;LibreOffice Writer(ワード)&lt;/li&gt;
&lt;li&gt;LibreOffice Calc(エクセル)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;見た目整える

&lt;ul&gt;
&lt;li&gt;綺麗な日本語フォントをAdobeが出してる(源ノ角フォント)のでそれを入れる。&lt;code&gt;mkdir ~/.font/&lt;/code&gt;してそこに展開。&lt;/li&gt;
&lt;li&gt;ログアウトし、ログインするとルックアンドフィールなどからフォント設定。&lt;/li&gt;
&lt;li&gt;FaenzaIconsをダウンロードして設定。&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;やってみての感想:7b68551a6d82d1888f6bc75cab6484f7&#34;&gt;やってみての感想&lt;/h1&gt;

&lt;p&gt;やはり時間かかった(3h)。ほとんどはパーティションとスワップ周りの調査。&lt;/p&gt;

&lt;p&gt;以下が得られた知見達。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;論理パーティションを作るには基本パーティションをフォーマットしなければならない。&lt;/li&gt;
&lt;li&gt;swapとか使うなら論理パーティション必須。&lt;/li&gt;
&lt;li&gt;Installより先にUSBブートしてGpartedで基本パーテイションの1つを論理パーティションにフォーマットする。&lt;/li&gt;
&lt;li&gt;その論理パーティションの中でメモリ容量x2程度の小さなパーティションを作成する。&lt;/li&gt;
&lt;li&gt;Lubuntuのインストーラ内で上記のパーティションをSwapに割り当てる。&lt;/li&gt;
&lt;li&gt;Install時に割り当てられなかったらfstabで設定。再起動後Gpartedで割り当て確認。&lt;/li&gt;
&lt;li&gt;Swap割り当てないとマウスポインタだけ動いてキーボードが操作不能になる。&lt;/li&gt;
&lt;li&gt;LubuntuでCtrl+Del+BackSpaceでKill Xserverが簡単に設定できる箇所が見つからなかった。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>自動でコミットメッセージの先頭にIssueIDを付与する</title>
      <link>https://iberianpig.github.io/posts/2015-08-18-issueid_xxxx%E3%81%AA%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E5%90%8D%E3%81%AE%E6%99%82%E3%81%AB%E8%87%AA%E5%8B%95%E3%81%A7%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E5%85%88%E9%A0%AD%E3%81%AB%5Bissueid%5D%E3%82%92%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8Bruby%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</link>
      <pubDate>Tue, 18 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-08-18-issueid_xxxx%E3%81%AA%E3%83%96%E3%83%A9%E3%83%B3%E3%83%81%E5%90%8D%E3%81%AE%E6%99%82%E3%81%AB%E8%87%AA%E5%8B%95%E3%81%A7%E3%82%B3%E3%83%9F%E3%83%83%E3%83%88%E3%83%A1%E3%83%83%E3%82%BB%E3%83%BC%E3%82%B8%E3%81%AE%E5%85%88%E9%A0%AD%E3%81%AB%5Bissueid%5D%E3%82%92%E4%BB%98%E4%B8%8E%E3%81%99%E3%82%8Bruby%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88/</guid>
      <description>

&lt;h1 id=&#34;issueidを自動でコミットメッセージに入れたい:256c9aba23a55141d0b5e840dc622108&#34;&gt;IssueIDを自動でコミットメッセージに入れたい&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://www.pivotaltracker.com&#34;&gt;&lt;img src=&#34;https://i.gyazo.com/abfa076d4f3affdf717d87351b8ca5fe.png&#34; alt=&#34;PivotalTracker&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
タイトルそのまま。&lt;/p&gt;

&lt;p&gt;なぜこんなことがやりたいかというと、&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;スクラムでのタスク管理にPivotalTracker(&lt;a href=&#34;http://www.pivotaltracker.com)を利用していて、ストーリーと呼ばれるチケットにはIDが付与される&#34;&gt;http://www.pivotaltracker.com)を利用していて、ストーリーと呼ばれるチケットにはIDが付与される&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Githubと連携することができ、[#IDの番号]としてコミットメッセージを入れてPushすると、PivotalTrackerのコメント欄にGithubのリンクが自動で挿入される&lt;/li&gt;
&lt;li&gt;あとからコミットログを追うときにコミットメッセージにIDが入っていると該当のチケットを検索できる&lt;/li&gt;
&lt;li&gt;毎回IDを入れるのがめんどくさい, たまに忘れる&lt;/li&gt;
&lt;li&gt;チームで浸透させたい&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;という理由から。&lt;/p&gt;

&lt;h2 id=&#34;gitのhookを利用する:256c9aba23a55141d0b5e840dc622108&#34;&gt;gitのhookを利用する&lt;/h2&gt;

&lt;p&gt;プロジェクトのルートディレクトリから辿ると、&lt;code&gt;.git/hook/&lt;/code&gt;というディレクトリがある&lt;br /&gt;
hookの中にはpre-commit, prepare-commit-msg, commit-msgなど、いろんなスクリプトが準備されている&lt;br /&gt;
(どれも&lt;code&gt;.sample&lt;/code&gt;という名前で入っているはず)&lt;/p&gt;

&lt;p&gt;hookの順序としては下記のタイミングで実行される&lt;br /&gt;
&amp;gt; 1. commit コマンド
&amp;gt; 2. pre-commitスクリプト実行
&amp;gt; 3. デフォルトのログメッセージの準備
&amp;gt; 4. prepare-commit-msgスクリプト実行
&amp;gt; 5. コミットメッセージ入力用のエディタ起動
&amp;gt; 6. commit-msgスクリプト実行
&amp;gt; 7. コミットの作成
&amp;gt; 8. post-commitスクリプト実行
&amp;gt; 9. &amp;ndash;amendで実行した場合はpost-rewriteスクリプト実行&lt;/p&gt;

&lt;p&gt;ということで、commit-msgにコミットメッセージの先頭に自動で追記するruby scriptを書く&lt;/p&gt;

&lt;h2 id=&#34;commit-msg:256c9aba23a55141d0b5e840dc622108&#34;&gt;commit-msg&lt;/h2&gt;

&lt;p&gt;{% gist f010cfa1134bc19e3989 %}&lt;/p&gt;

&lt;h3 id=&#34;処理の流れ:256c9aba23a55141d0b5e840dc622108&#34;&gt;処理の流れ&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ARGV[0]&lt;/code&gt;にはコミットメッセージを入力するファイルが与えられる&lt;/li&gt;
&lt;li&gt;ファイルからコメントを取り出す&lt;/li&gt;
&lt;li&gt;コメントから先頭の[#xxxx]を除去する(&lt;code&gt;git commit -amend&lt;/code&gt;した時のため)&lt;/li&gt;
&lt;li&gt;コメントから空行、#で始まる行を除去する(ただし、&amp;ndash; &amp;gt;8 &amp;ndash;マークは残す)&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git commit -v&lt;/code&gt; の際に、&amp;ndash; &amp;gt;8 &amp;ndash;マーク以下にCommit時に自動で切り取られるDiff表示があるため&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;メッセージが&amp;ndash; &amp;gt;8 &amp;ndash;マークから開始だった場合、commit メッセージが空であるとして、コミットを中断&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git branch&lt;/code&gt;コマンドより、* の付いているカレントブランチIssueID_xxxxからIssueIDを抽出する&lt;/li&gt;
&lt;li&gt;IssueIDとコメントを連結させる&lt;/li&gt;
&lt;li&gt;メッセージをファイルに書き込んで終了&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;実行権限の付与:256c9aba23a55141d0b5e840dc622108&#34;&gt;実行権限の付与&lt;/h3&gt;

&lt;p&gt;作成したスクリプトに下記コマンドで実行権をつけてやる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ chmod +x commit-msg
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;やってみる:256c9aba23a55141d0b5e840dc622108&#34;&gt;やってみる&lt;/h3&gt;

&lt;p&gt;ブランチを切ってみる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git co -b &amp;quot;12345_xxxxxx&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;適当にコミットしてみる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git commit -am &amp;quot;hoge fuga&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コミットメッセージが&lt;code&gt;[#12345]hoge fuga&lt;/code&gt;となっているはず。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;git commit -amend&lt;/code&gt;などでもうまく動くはず。&lt;/p&gt;

&lt;h2 id=&#34;その他チラ裏:256c9aba23a55141d0b5e840dc622108&#34;&gt;その他チラ裏&lt;/h2&gt;

&lt;p&gt;prepare-commit-msg では、&lt;code&gt;git commit -ammend&lt;/code&gt;の際に二重で[#IssueID]を付与してしまうためcommit-msgを利用した&lt;br /&gt;
shell scriptでsedを利用していたが、GNUのsedとFreeBSD系のsedの動作が異なり, 他のメンバーに展開できなかったためrubyで書いた&lt;/p&gt;

&lt;h2 id=&#34;エンジニアの小さなしあわせ:256c9aba23a55141d0b5e840dc622108&#34;&gt;エンジニアの小さなしあわせ&lt;/h2&gt;

&lt;p&gt;こういう小さな生産性向上のためにいろいろ小手先を使うのが好き。&lt;br /&gt;
エンジニアならこの感覚、大事。&lt;br /&gt;
ハマると仕事がつかなくなるんだけれども。&lt;/p&gt;

&lt;h2 id=&#34;special-thanks:256c9aba23a55141d0b5e840dc622108&#34;&gt;Special Thanks&lt;/h2&gt;

&lt;p&gt;(&lt;a href=&#34;http://qiita.com/mima_ita/items/dcaa3789022d2a9ab929&#34;&gt;http://qiita.com/mima_ita/items/dcaa3789022d2a9ab929&lt;/a&gt;)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Install node/npm</title>
      <link>https://iberianpig.github.io/posts/2015-08-15-install-node/</link>
      <pubDate>Sun, 16 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-08-15-install-node/</guid>
      <description>

&lt;h1 id=&#34;ppaから最新のnodeを入れる-ubuntu14-04-elementary-os-freya:072f97ab9eb0c2c105932b599c112cc7&#34;&gt;PPAから最新のnodeを入れる(Ubuntu14.04/Elementary OS freya)&lt;/h1&gt;

&lt;p&gt;ionic入れようとした時にwarning出たのでnodeの最新バージョンを入れた。&lt;br /&gt;
sudo apt-get install nodejsで入るバージョンが最新でなかったので少し調べる事になった。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;nodesource-comで管理しているppaを利用:072f97ab9eb0c2c105932b599c112cc7&#34;&gt;nodesource.comで管理しているppaを利用&lt;/h2&gt;

&lt;p&gt;wget入ってない場合はインストール。&lt;br /&gt;
&lt;code&gt;sudo apt-get install wget&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ppaの導入&lt;br /&gt;
&lt;code&gt;wget -qO- https://deb.nodesource.com/setup | sudo bash -&lt;/code&gt; を実行&lt;/p&gt;

&lt;h3 id=&#34;nodeのインストール:072f97ab9eb0c2c105932b599c112cc7&#34;&gt;nodeのインストール&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install nodejs&lt;/code&gt;&lt;br /&gt;
nodeではなくnodejsを使う&lt;/p&gt;

&lt;h3 id=&#34;version番号の確認:072f97ab9eb0c2c105932b599c112cc7&#34;&gt;version番号の確認&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;node -v&lt;/code&gt;&lt;br /&gt;
v0.12.7&lt;/p&gt;

&lt;p&gt;&lt;code&gt;npm -v&lt;/code&gt;&lt;br /&gt;
2.11.3&lt;/p&gt;

&lt;p&gt;色々やってるようだけど内部ではPPAを追加してるようで、apt-get でインストールできるようになる&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>elementary OS freyaへのアップグレード時のメモ（elementaryOS lunaから）</title>
      <link>https://iberianpig.github.io/posts/2015-08-15-elementary-os-luna-upgrade-to-freya/</link>
      <pubDate>Sat, 15 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-08-15-elementary-os-luna-upgrade-to-freya/</guid>
      <description>

&lt;ul&gt;
&lt;li&gt;lunaからのアップグレードはアップデートマネージャなどのGUIでは提供されていない&lt;/li&gt;
&lt;li&gt;新たにインストールディスクを作成し、上書きでのインストールを行う。(むしろこの方法を推奨していた)&lt;/li&gt;
&lt;li&gt;lunaのインストール時に&lt;code&gt;/home&lt;/code&gt;と&lt;code&gt;/&lt;/code&gt;パーティションを分けて管理していたので、&lt;code&gt;/home&lt;/code&gt;を残して&lt;code&gt;/&lt;/code&gt;をすべて入れ替える。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/home&lt;/code&gt;と&lt;code&gt;/&lt;/code&gt;(root)パーティションがGparted上で /dev/sda1, /dev/sda2等、どれに割り当てられるかを確認

&lt;ul&gt;
&lt;li&gt;(install時にこれらを割り当てするときに間違えなようにメモしておく)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;elementaryOS freyaのイメージをダウンロード(&lt;a href=&#34;https://elementary.io&#34;&gt;https://elementary.io&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;UnetbootInでのインストールディスクを作成(今回は8GBのUSBメモリに作成)&lt;/li&gt;
&lt;li&gt;起動時にBIOS画面でF8を押してUSBディスクからブートさせる。Install elementaryOSを選択&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;パッケージのインストール:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;パッケージのインストール&lt;/h1&gt;

&lt;h2 id=&#34;各種レポジトリの追加:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;各種レポジトリの追加&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo man add-apt-repository
sudo add-apt-repository ppa:mpstark/elementary-tweaks-daily
sudo add-apt-repository ppa:numix/ppa
sudo add-apt-repository ppa:webupd8team/atom
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get upgrade
sudo add-apt-repository -y ppa:aguignard/ppa
sudo add-apt-repository -y ppa:pi-rho/dev
sudo add-apt-repository -y ppa:git-core/ppa
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;elementary-tweaks-のインストール:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;elementary-tweaks のインストール&lt;/h2&gt;

&lt;p&gt;アイコンやフォント、アニメーションなどの外観の設定やドッグの設定ができる&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install elementary-tweaks
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;numixのiconセットのインストール:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;numixのiconセットのインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install numix-*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;numix-circleを適用&lt;/p&gt;

&lt;h2 id=&#34;arc-themeのインストール:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;Arc-themeのインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo sh -c &amp;quot;echo &#39;deb http://download.opensuse.org/repositories/home:/Horst3180/xUbuntu_15.04/ /&#39; &amp;gt;&amp;gt; /etc/apt/sources.list.d/arc-theme.list&amp;quot;
wget http://download.opensuse.org/repositories/home:Horst3180/xUbuntu_15.04/Release.key
sudo apt-key add - &amp;lt; Release.key
sudo apt-get update
sudo apt-get install arc-theme
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ターミナルの分割にbyobuを利用:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;ターミナルの分割にbyobuを利用&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install byobu tmux
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;xclipのインストール:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;xclipのインストール&lt;/h2&gt;

&lt;p&gt;byobu(tmux)上での擬似viコピーにxclipを利用しているので下記を実行&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install xclip
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;vim-gnomeを入れることでterminal上のvimもクリップボード連携したコピペが可能に:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;vim-gnomeを入れることでterminal上のvimもクリップボード連携したコピペが可能に。&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install vim-gnome
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;ag-のインストール-高速なgrep:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;ag のインストール(高速なgrep)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install silversearcher-ag
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;アプリケーションの設定用アプリケーション-dconf-editor-gconf-editor:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;アプリケーションの設定用アプリケーション(dconf-editor, gconf-editor)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install dconf-editor gconf-editor
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;gitのインストール:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;gitのインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install git tig
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;guiパッケージマネージャ:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;GUIパッケージマネージャ&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install synaptic
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;プロセス用のgrep:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;プロセス用のgrep&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install pgrep
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;パスワードマネージャ:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;パスワードマネージャ&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install keepassx
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;システムモニタ-shift-ctrl-escにバインドさせる:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;システムモニタ(shift+ctrl+ESCにバインドさせる）&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install gnome-system-monitor
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;dropboxのinstall:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;dropboxのinstall&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;websiteからdebパッケージをインストール(&lt;a href=&#34;https://www.dropbox.com/&#34;&gt;https://www.dropbox.com/&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dropbox filestatus&lt;/code&gt;で状態/動作の確認&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;xswipeのインストール-マルチタッチジェスチャ:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;xSwipeのインストール(マルチタッチジェスチャ)&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;インストールはこちらのREADME参照(&lt;a href=&#34;https://github.com/iberianpig/xSwipe&#34;&gt;https://github.com/iberianpig/xSwipe&lt;/a&gt;)&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;14.04系からsynapticsドライバがアップデートされて依存していたコマンドが利用できなくなったため、 Fork版のドライバを入れる必要あり&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Pull request歓迎。&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;fcitx-mozcのインストール:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;fcitx+mozcのインストール&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install fcitx fcitx-mozc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;日本語入力系統をIbusからFcitxへ変更を行うため、&lt;code&gt;im-config&lt;/code&gt;を実行し、fcitxへ変更する&lt;/p&gt;

&lt;h2 id=&#34;dotfiles-bashrcや-vimrcなど-の設定ファイル:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;dotfiles(.bashrcや.vimrcなど)の設定ファイル&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;自分のGitHubレポジトリから引っ張ってくる&lt;/li&gt;
&lt;li&gt;home直下にdotfiles内からシンボリックリンク張るスクリプトを実行&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;自作スクリプトの実行などにキーバインドを割り当て:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;自作スクリプトの実行などにキーバインドを割り当て&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get install xbindkeys
sudo apt-get install xdotool
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;dotfilesより.xbindkeysをセット

&lt;ul&gt;
&lt;li&gt;テザリング用の接続コマンド&lt;/li&gt;
&lt;li&gt;セカンドモニタの位置変更(大体いつも真上にセットする)&lt;/li&gt;
&lt;li&gt;workspace移動のキーバインドの追加&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;業務用-個人的に必要だったのでメモ:4d3bb77c9ea83877f0cf6aba05568f9c&#34;&gt;業務用(個人的に必要だったのでメモ)&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install mysql-client-5.6
sudo apt-get install mysql-client
sudo apt-get install mysql-server
sudo apt-get install nodejs
sudo apt-get install redis-server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://askubuntu.com/a/458646&#34;&gt; workbenchは14.04版にバグがあるため注意&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;適宜アップデートしていく予定。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL WorkbenchでQueryの結果が表示されない問題</title>
      <link>https://iberianpig.github.io/posts/2015-06-21-mysql-workbench-on-elementary-os-freya/</link>
      <pubDate>Sun, 21 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-06-21-mysql-workbench-on-elementary-os-freya/</guid>
      <description>

&lt;p&gt;elementaryOS freya(Ubuntu14.04ベース)で問題が起きた。&lt;br /&gt;
MySQLはUbuntuのリポジトリにあるものでも依存関係で問題は合ったり、直接Oracleから落としても上手く動かないことも合ったりしたのであまり驚かない。
(またお前か程度)
しかしながら毎度踏みまくるので、ブログなりに記録していかないと、再度環境構築した際に面倒なのでメモ書き。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;具体的には以下のような症状。&lt;br /&gt;
&lt;a href=&#34;http://gyazo.com/62032b7e85ee9a16a4b33dfb096b1454&#34;&gt;&lt;img src=&#34;http://i.gyazo.com/62032b7e85ee9a16a4b33dfb096b1454.png&#34; alt=&#34;Gyazo&#34; /&gt;&lt;/a&gt;
workbencだQueryの結果が白くなって表示されない。&lt;br /&gt;
selectした結果がセルで表示されるはずなんだけど。
ちなみにCUIでmysqlからselectしたりした場合は全く問題ない。&lt;/p&gt;

&lt;h2 id=&#34;調査してみた:f94058f14ea96d152f182c3ea0fbf87e&#34;&gt;調査してみた&lt;/h2&gt;

&lt;p&gt;色々な人が死んでた&lt;br /&gt;
workbenchはelementaryOS freya,Ubuntu14.04以降でSQLの実行結果が表示されないバグがあることが報告されている&lt;/p&gt;

&lt;p&gt;また、&lt;a href=&#34;http://askubuntu.com/a/458646&#34;&gt; debパッケージの中身を書き換える方法 &lt;/a&gt;が提案されていたが筆者の環境では失敗。&lt;/p&gt;

&lt;h2 id=&#34;source落としてパッチ当ててmakeする-成功:f94058f14ea96d152f182c3ea0fbf87e&#34;&gt;source落としてパッチ当ててmakeする(成功)&lt;/h2&gt;

&lt;p&gt;唯一上手く行った方法。&lt;/p&gt;

&lt;h3 id=&#34;下記コマンドを実行:f94058f14ea96d152f182c3ea0fbf87e&#34;&gt;下記コマンドを実行&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;sudo apt-get remove mysql-workbench*
tar xvf mysql-workbench-community-6.3.3-src.tar.gz
cd mysql-workbench-community-6.3.3-src
wget -O patch-glib.diff http://bugs.mysql.com/file.php?id=21874&amp;amp;bug_id=74147
patch -p0 &amp;lt; patch-glib.diff
sudo apt-get build-dep mysql-workbench
sudo apt-get install libgdal-dev
cd build
cmake .. -DBUILD_CONFIG=mysql_release
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;buildは1.5h程度は見込んでおいた方が良い。&lt;br /&gt;
&lt;code&gt;sudo make install&lt;/code&gt;後にrebootするときちんとresultが表示される。&lt;/p&gt;

&lt;h2 id=&#34;special-thanks:f94058f14ea96d152f182c3ea0fbf87e&#34;&gt;special thanks&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/elementaryos/comments/2tahgl/elementary_mysql_workbench_libglib_242_empty/&#34;&gt; reddit &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bugs.launchpad.net/ubuntu/+source/mysql-workbench/+bug/1376154/comments/7&#34;&gt; launchpad &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>EasytetherでBluetoothテザリング</title>
      <link>https://iberianpig.github.io/posts/2015-06-07-easytether%E3%82%92linux%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</link>
      <pubDate>Sun, 07 Jun 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-06-07-easytether%E3%82%92linux%E3%81%A7%E4%BD%BF%E3%81%A3%E3%81%A6%E3%81%BF%E3%82%8B/</guid>
      <description>

&lt;h1 id=&#34;easytether-with-linux:1cfffe6a7adef89841b67d49ce1b6604&#34;&gt;Easytether with linux&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.mstream.easytether_polyclef&amp;amp;hl=ja&#34;&gt;&lt;img src=&#34;https://lh6.ggpht.com/SkGhbKqXHvu3P08ZU_hW2ezWnTGOYEBjNvPp0cDBhWzAlBYlhoG6xS45-BVv0hSraA=w300-rw&#34; alt=&#34;EasytetherFull&#34; /&gt;&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.mstream.easytether_polyclef&amp;amp;hl=ja&#34;&gt;EasytetherFull( GooglePlay )&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;数年前に、AndroidのXperia acroHD使ってた時に利用してた有償のテザリングアプリ。一応FreeのLite版もある。&lt;br /&gt;
そして、公式の&lt;strong&gt;Linux向けクライアント&lt;/strong&gt;がある。&lt;br /&gt;
当時はUSBテザリングで利用しており、テザリングサポート外の端末でも動作して、そこそこ速度が出ていたので利用していた。&lt;br /&gt;
Linux版パッケージは&lt;a href=&#34;http://www.mobile-stream.com/easytether/drivers.html&#34;&gt; こちら &lt;/a&gt; からダウンロード可。&lt;/p&gt;

&lt;p&gt;現在利用しているXperia Z1fではUSBテザリング、Wifiテザリング、Bluetoothは標準でサポートされている。&lt;br /&gt;
いつもはXperia側のバッテリーの事を気にかけてBluetoothでテザリングを行っていたが、Easytetherの事だから標準より速度出るのでは…?と、気になってみたのでやってみた&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h2 id=&#34;speedテスト3回戦:1cfffe6a7adef89841b67d49ce1b6604&#34;&gt;Speedテスト3回戦&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;Easytether Bluetoothテザリング&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;AndroidのBluetoothテザリング&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.speedtest.net/my-result/4414894284&#34;&gt;&lt;img src=&#34;http://www.speedtest.net/result/4414894284.png&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.speedtest.net/my-result/4414914824&#34;&gt;&lt;img src=&#34;http://www.speedtest.net/result/4414914824.png&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.speedtest.net/my-result/4414923094&#34;&gt;&lt;img src=&#34;http://www.speedtest.net/result/4414923094.png&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.speedtest.net/my-result/4414920048&#34;&gt;&lt;img src=&#34;http://www.speedtest.net/result/4414920048.png&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.speedtest.net/my-result/4414925130&#34;&gt;&lt;img src=&#34;http://www.speedtest.net/result/4414925130.png&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;&lt;a href=&#34;http://www.speedtest.net/my-result/4414927464&#34;&gt;&lt;img src=&#34;http://www.speedtest.net/result/4414927464.png&#34; /&gt;&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;やはり-easytetherの方が早い:1cfffe6a7adef89841b67d49ce1b6604&#34;&gt;やはり、Easytetherの方が早い。&lt;/h2&gt;

&lt;p&gt;若干だけれども。
ただ、バッテリー消費量の検証は行っていないので片手落ち感はある。
ただし起動/終了が面倒なので、ショートカット割り当てまで行う。&lt;/p&gt;

&lt;h1 id=&#34;おまけ-起動スクリプトの登録:1cfffe6a7adef89841b67d49ce1b6604&#34;&gt;おまけ(起動スクリプトの登録)&lt;/h1&gt;

&lt;h2 id=&#34;接続を切り替えるscriptを作る:1cfffe6a7adef89841b67d49ce1b6604&#34;&gt;接続を切り替えるscriptを作る&lt;/h2&gt;

&lt;p&gt;easytether.shを任意のディレクトリに作成。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/sh

pgrep -lf easytether
ret=$?

if test ${ret} -eq 0
then
  # 既に起動中の場合停止させる
  pkill easytether -f
else
  # 対象のスマホのBluetoothのMACアドレスを指定して接続
  sudo easytether-bluetooth BT:MA:CA:DD:RE:SS
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;内容はこんな感じ。&lt;/p&gt;

&lt;p&gt;実行権与えたいので&lt;code&gt;sudo chmod +x easytether.sh&lt;/code&gt;してあげる&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo ./easytether.sh&lt;/code&gt;で動かしてみる。&lt;/p&gt;

&lt;h2 id=&#34;パスワードの省略-sudoersの変更:1cfffe6a7adef89841b67d49ce1b6604&#34;&gt;パスワードの省略( sudoersの変更 )&lt;/h2&gt;

&lt;p&gt;ただし、sudo つけてあげないとEasytetherが動いてくれないので、自動化やショートカット割り当てはには向かない。そこで下記のように&lt;code&gt;sudo visudo&lt;/code&gt;で当該スクリプトに関してはパスワードが必要ない旨を明示し、パスワードを省略する。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;username&amp;gt; ALL=(ALL) NOPASSWD: /path/to/script/
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;xbindkeysショートカットキーのマッピング:1cfffe6a7adef89841b67d49ce1b6604&#34;&gt;xbindkeysショートカットキーのマッピング&lt;/h2&gt;

&lt;p&gt;xbindkeysを利用してマッピングする。&lt;br /&gt;
持ってない人は&lt;code&gt;sudo apt-get install xbindkeys&lt;/code&gt;で入れましょう。便利。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;~/.xbindkeysrc&lt;/code&gt;に下記を追記する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;sudo /path/to/script/easytether.sh&amp;quot;
   Mod4 + F2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これはSuper_L + F2で起動させるようにした。&lt;br /&gt;
これでEasytetherの切り替えがショートカットのみで行われるようになった。&lt;/p&gt;

&lt;p&gt;色々なキーを自作のスクリプトにバインドしてるけれど、xbindkeys便利すぎる。&lt;/p&gt;

&lt;p&gt;それではEasytetherで良いノマドライフを!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linuxでブルーライトフィルタ そして快眠へ...</title>
      <link>https://iberianpig.github.io/posts/2015-05-31-linux%E3%81%A7%E3%83%96%E3%83%AB%E3%83%BC%E3%83%A9%E3%82%A4%E3%83%88%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF-%E3%81%9D%E3%81%97%E3%81%A6%E5%BF%AB%E7%9C%A0%E3%81%B8/</link>
      <pubDate>Sun, 31 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-05-31-linux%E3%81%A7%E3%83%96%E3%83%AB%E3%83%BC%E3%83%A9%E3%82%A4%E3%83%88%E3%83%95%E3%82%A3%E3%83%AB%E3%82%BF-%E3%81%9D%E3%81%97%E3%81%A6%E5%BF%AB%E7%9C%A0%E3%81%B8/</guid>
      <description>

&lt;p&gt;世界各国のLinuxerの皆さん、こんばんは&lt;/p&gt;

&lt;h1 id=&#34;寝不足のlinuxer達に贈る:aafdb94a326bfa5d225f86a3bcadd33b&#34;&gt;寝不足のLinuxer達に贈る&lt;/h1&gt;

&lt;p&gt;最近、寝不足のような気がすることは？&lt;/p&gt;

&lt;p&gt;毎日Linuxと戯れるのには飽きないが、目の疲れや、夜の寝不足と行ったことからは免れられない。&lt;/p&gt;

&lt;p&gt;少しでも目への負荷を軽減させるべく、なるべく夜はPCを利用しない、時間を短くするなど努力したことはあるはず。&lt;/p&gt;

&lt;p&gt;現実問題難しい。&lt;/p&gt;

&lt;p&gt;仕事でPC, 趣味でもPCを使うLinuxer達には。&lt;/p&gt;

&lt;p&gt;そんなみなさんに朗報。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;pcメガネ-jins-pc:aafdb94a326bfa5d225f86a3bcadd33b&#34;&gt;PCメガネ、JINS PC&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jins-jp.com/jins-pc/img/item.jpg&#34; alt=&#34;僕も愛用&#34; /&gt;&lt;/p&gt;

&lt;p&gt;jins(&lt;a href=&#34;http://www.jins-jp.com/jins-pc/)のメガネ。&#34;&gt;http://www.jins-jp.com/jins-pc/)のメガネ。&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;このメガネを使うと目に(心理的に)優しくなれる。&lt;/p&gt;

&lt;p&gt;そもそも、寝付きの悪さの原因の根源は何か？&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.jins-jp.com/jins-pc/img/koga.jpg&#34; alt=&#34;ぜんぶブルーライトのせいだ&#34; /&gt;&lt;/p&gt;

&lt;p&gt;そう、ブルーライト、聞いたことあるはず。&lt;/p&gt;

&lt;p&gt;寝付きの悪さだけでなく、目の疲れ、 肩こり、頭痛などに影響を与えていると言われる。&lt;/p&gt;

&lt;h1 id=&#34;メガネを買うか否か:aafdb94a326bfa5d225f86a3bcadd33b&#34;&gt;メガネを買うか否か&lt;/h1&gt;

&lt;p&gt;（ハードで何とかするんじゃない、ソフトウェアでどうにかするんだ・・・！）
&amp;gt; そんなLinuxer達の心の声が聞こえてきそうだ。(ちなみに自分は買ってしまった)&lt;/p&gt;

&lt;h1 id=&#34;ブルーライトをカットする:aafdb94a326bfa5d225f86a3bcadd33b&#34;&gt;ブルーライトをカットする&lt;/h1&gt;

&lt;p&gt;本題に入ろう。&lt;/p&gt;

&lt;p&gt;実はこのブルーライト、&lt;strong&gt;色温度&lt;/strong&gt;を下げることで減量させることができる。&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;色温度（いろおんど、英語：color temperature）とは、ある光源が発している光の色を定量的な数値で表現する尺度（単位）である。単位には熱力学的温度の K（ケルビン） を用いる。
(&lt;a href=&#34;http://ja.wikipedia.org/wiki/%E8%89%B2%E6%B8%A9%E5%BA%A6&#34;&gt;http://ja.wikipedia.org/wiki/%E8%89%B2%E6%B8%A9%E5%BA%A6&lt;/a&gt;)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;実は色温度は青い方が高い。
炎は赤いので赤は温度が高い先入観があるかもしれないけれど、実際は炎の先端の青い部分が最も温度が高い。&lt;/p&gt;

&lt;p&gt;そう、モニタの色温度をソフトウェアで変更さえすれば良い。
輝度を下げることでブルーライト低減はできるが、色温度を下げることで更に低減させ、PCメガネよりさらに高い効果を目指す。&lt;/p&gt;

&lt;p&gt;今回は&lt;a href=&#34;http://jonls.dk/redshift/&#34;&gt;Redshift&lt;/a&gt;というソフトウェアを利用。&lt;/p&gt;

&lt;h1 id=&#34;redshift:aafdb94a326bfa5d225f86a3bcadd33b&#34;&gt;Redshift&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://jonls.dk/assets/redshift-icon-256.png&#34; alt=&#34;Redshift&#34; /&gt;
&lt;a href=&#34;http://manpages.ubuntu.com/manpages/trusty/man5/redshift.5.html&#34;&gt;manual page&lt;/a&gt;
このソフトウェアを使えば、手持ちのマシンから放たれるブルーライトが低減できる。&lt;/p&gt;

&lt;p&gt;Redshift同様のソフトウェアとしてf.luxも試したが、稀にCPU消費量が非常に高くなることがあり、それが理由でRedshiftに切り替えて利用している。&lt;/p&gt;

&lt;h2 id=&#34;redshiftのインストール:aafdb94a326bfa5d225f86a3bcadd33b&#34;&gt;Redshiftのインストール&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sudo apt-get install redshift redshift-gtk&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;パネルのインジケーターに表示させることができる。コマンドラインでも使えるため、その場合はredshift-gtkは必要ない。&lt;/p&gt;

&lt;h2 id=&#34;redshiftの起動と設定:aafdb94a326bfa5d225f86a3bcadd33b&#34;&gt;Redshiftの起動と設定&lt;/h2&gt;

&lt;p&gt;redshift-gtkを実行させると、パネル上にインジケーターが出る。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;toggleでon/offを切り替え。&lt;/li&gt;
&lt;li&gt;autostartで自動起動の設定を切り替え。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;詳細な設定内容はコマンドラインや外部ファイルから入力することができる。&lt;br /&gt;
&lt;a href=&#34;http://kledgeb.blogspot.jp/2013/01/ubuntu-redshift-1.html&#34;&gt;こちらのサイト&lt;/a&gt;で詳しく紹介されていた。&lt;/p&gt;

&lt;p&gt;デフォルトの設定の場合は、日中は色温度はあまり抑えない設定で、夜間はほんのり赤くなり色温度を抑える。([off]6300K, [day]5700K, [night]3600K)&lt;/p&gt;

&lt;p&gt;夜の寝付きの良さがだいぶ変わるはず。&lt;br /&gt;
Linuxer達に良き睡眠を。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Elementary OS freyaでハイバネートオプションを追加する</title>
      <link>https://iberianpig.github.io/posts/2015-05-04-elementary-os-freya%E3%81%A7%E3%83%8F%E3%82%A4%E3%83%90%E3%83%8D%E3%83%BC%E3%83%88%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B/</link>
      <pubDate>Mon, 04 May 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-05-04-elementary-os-freya%E3%81%A7%E3%83%8F%E3%82%A4%E3%83%90%E3%83%8D%E3%83%BC%E3%83%88%E3%82%AA%E3%83%97%E3%82%B7%E3%83%A7%E3%83%B3%E3%82%92%E8%BF%BD%E5%8A%A0%E3%81%99%E3%82%8B/</guid>
      <description>

&lt;p&gt;少し前からElementaryOSの最新版Freyaを使っている。&lt;br /&gt;
電源周りで少し手こずったので、備忘録として残しておく。&lt;br /&gt;
インストール後にやったことはまた今度まとめる。&lt;/p&gt;

&lt;h1 id=&#34;ハイバネートオプションを追加する:c8d472f69fc412cae198361bfb8e36f4&#34;&gt;ハイバネートオプションを追加する&lt;/h1&gt;

&lt;p&gt;Elementary OS Freyaでハイバネートが利用できなかったので、利用できるようにする。&lt;br /&gt;
※ メモリ領域のデータをディスクに退避することで、作業状態を保存した状態で電源オフにし、電源オンでそこから復帰できる。
サスペンドはメモリに電源供給しながらデータを保持。メモリは揮発性で、電源供給がないとデータが消えてしまうため。&lt;/p&gt;

&lt;p&gt;pm-utilsを導入してpm-hibernateコマンドを実行する手もあるが、今回は別の方法で。&lt;/p&gt;

&lt;h2 id=&#34;電源オプションの中にハイバネートを追加する:c8d472f69fc412cae198361bfb8e36f4&#34;&gt;電源オプションの中にハイバネートを追加する&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sudo vi /etc/polkit-1/localauthority/50-local.d/com.ubuntu.enable-hibernate.pkla&lt;/code&gt;&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;下記をコピペ&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[Re-enable hibernate by default in upower]
Identity=unix-user:*
Action=org.freedesktop.upower.hibernate
ResultActive=yes

[Re-enable hibernate by default in logind]
Identity=unix-user:*
Action=org.freedesktop.login1.hibernate
ResultActive=yes
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;grubの設定:c8d472f69fc412cae198361bfb8e36f4&#34;&gt;Grubの設定&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;sudo vi /etc/default/grub&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;GRUB_CMDLINE_LINUX_DEFAULT=&amp;quot;quiet splash resume=/dev/sda3&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;resume=&amp;lsquo;スワップ用パーティション&amp;rsquo;とすること！&lt;/p&gt;

&lt;h3 id=&#34;grubの更新:c8d472f69fc412cae198361bfb8e36f4&#34;&gt;Grubの更新&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;sudo update-grub&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これでシャットダウンのオプションなどで、&lt;code&gt;休止状態&lt;/code&gt;(もしくは&lt;code&gt;ハイバネート&lt;/code&gt;)が増えているはず。&lt;/p&gt;

&lt;h1 id=&#34;ノートpcを閉じた時にハイバネーションを有効にしたい-ロック画面でのpowerボタンの挙動を変える:c8d472f69fc412cae198361bfb8e36f4&#34;&gt;ノートPCを閉じた時にハイバネーションを有効にしたい &amp;amp;&amp;amp; ロック画面でのPowerボタンの挙動を変える&lt;/h1&gt;

&lt;p&gt;自分の場合はロック画面の状態（だがディスプレイオフ）で電源を押して復帰しようとして、シャットダウンしてしまう現象に悩まされていた
デフォでこの動作はバグと言っていい気がする。あとノートPCなので、急なとき閉じて移動、などあるのでその際はハイバネートできたほうが良い。&lt;/p&gt;

&lt;h2 id=&#34;etc-systemd-logind-confの編集:c8d472f69fc412cae198361bfb8e36f4&#34;&gt;/etc/systemd/logind.confの編集&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;man logind.conf&lt;/code&gt; で確認したところ、HandlerPowerKeyやHandleLidSwitchなど、電源周りの挙動を変えられるようだった。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo vi /etc/systemd/logind.conf&lt;/code&gt;にて該当箇所のコメントアウトを外し, 下記に変更する&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;HandlePowerKey=hibernate
HandleLidSwitch=hibernate
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再起動後、ロック画面での電源ボタン, PCの閉じる動作によるハイバネートが有効になっているはず。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SPとOC-企業戦略-</title>
      <link>https://iberianpig.github.io/posts/2015-04-21-sp%E3%81%A8oc-%E4%BC%81%E6%A5%AD%E6%88%A6%E7%95%A5/</link>
      <pubDate>Tue, 21 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-04-21-sp%E3%81%A8oc-%E4%BC%81%E6%A5%AD%E6%88%A6%E7%95%A5/</guid>
      <description>

&lt;p&gt;会社の方針決めるために、企業戦略のたて方についての勉強する。&lt;/p&gt;

&lt;p&gt;教材は&lt;code&gt;ストーリーとしての競争戦略&lt;/code&gt;、から。&lt;/p&gt;

&lt;h1 id=&#34;戦略には優劣がある:62b85e87991c447040253970b58f308c&#34;&gt;戦略には優劣がある&lt;/h1&gt;

&lt;p&gt;打率2.5割の打者に戦略Aを施すと3割&lt;br /&gt;
打率2.5割の打者に戦略Bを施すと3.5割&lt;/p&gt;

&lt;p&gt;より結果を高く押し上げるためのものが戦略, それには優劣がある&lt;/p&gt;

&lt;h1 id=&#34;戦略には差異が必要:62b85e87991c447040253970b58f308c&#34;&gt;戦略には差異が必要&lt;/h1&gt;

&lt;p&gt;差異は大きく分けて2種類ある。SPとOCだ。&lt;/p&gt;

&lt;h1 id=&#34;spとoc:62b85e87991c447040253970b58f308c&#34;&gt;SPとOC&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;競争優位を確立するための戦略の立て方である。著者によれば、これには、ＯＣとＳＰのふたつがあるという。ＳＰはStrategic Positioningの略でポジショニングのこと、ＯＣはOrganizational Capabilitiyの略で組織能力のこと。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;sp-strategic-positioning:62b85e87991c447040253970b58f308c&#34;&gt;SP(Strategic Positioning)&lt;/h2&gt;

&lt;p&gt;&amp;ldquo;違うシェフでなく違うジャンルの料理のレシピを揃える&amp;rdquo;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;外的要因によって左右される&lt;/li&gt;
&lt;li&gt;他社と違った何をやるか&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;oe-operational-effectives:62b85e87991c447040253970b58f308c&#34;&gt;OE(Operational Effectives)&lt;/h3&gt;

&lt;p&gt;ジャンルの中でのレベル, 程度の違いであれば、OE(operational effetives)として区別され、改善する部分として扱われる。&lt;/p&gt;

&lt;h2 id=&#34;oc-organizational-capability:62b85e87991c447040253970b58f308c&#34;&gt;OC(Organizational Capability)&lt;/h2&gt;

&lt;p&gt;&amp;ldquo;ライバルにないシェフを揃える&amp;rdquo;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;内的要因によって左右される&lt;/li&gt;
&lt;li&gt;市場にない、簡単に模倣できないもの&lt;/li&gt;
&lt;li&gt;他社と違った何を持つか&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;利益持続のためのトレードオフ:62b85e87991c447040253970b58f308c&#34;&gt;利益持続のためのトレードオフ&lt;/h1&gt;

&lt;p&gt;[WIP, コスト, ニッチ特化による無競争]の三者択一となる&lt;/p&gt;

&lt;h2 id=&#34;wtp:62b85e87991c447040253970b58f308c&#34;&gt;WTP&lt;/h2&gt;

&lt;p&gt;= Willingness To Pay
顧客が支払いたいと思う水準, これが高いと利益が出る&lt;/p&gt;

&lt;h2 id=&#34;コスト:62b85e87991c447040253970b58f308c&#34;&gt;コスト&lt;/h2&gt;

&lt;p&gt;低コストによって利益が出る&lt;/p&gt;

&lt;h2 id=&#34;ニッチ特化による無競争:62b85e87991c447040253970b58f308c&#34;&gt;ニッチ特化による無競争&lt;/h2&gt;

&lt;p&gt;市場に競争相手がいない事で価格の下落が起きない&lt;/p&gt;

&lt;p&gt;ちなみに利益を表す場合、&lt;code&gt;P = WTP - C&lt;/code&gt;の式となる。&lt;br /&gt;
利益はWTPからコストを引いたもので表される&lt;/p&gt;

&lt;p&gt;~つづく~&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>insert-modeでvimのカーソルキー形状を変えて幸せになる(gnome-terminalの場合)</title>
      <link>https://iberianpig.github.io/posts/2015-04-19-insert-mode%E3%81%A7vim%E3%81%AE%E3%82%AB%E3%83%BC%E3%82%BD%E3%83%AB%E3%82%AD%E3%83%BC%E5%BD%A2%E7%8A%B6%E3%82%92%E5%A4%89%E3%81%88%E3%81%A6%E5%B9%B8%E3%81%9B%E3%81%AB%E3%81%AA%E3%82%8B%28gnome-terminal%29/</link>
      <pubDate>Sun, 19 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-04-19-insert-mode%E3%81%A7vim%E3%81%AE%E3%82%AB%E3%83%BC%E3%82%BD%E3%83%AB%E3%82%AD%E3%83%BC%E5%BD%A2%E7%8A%B6%E3%82%92%E5%A4%89%E3%81%88%E3%81%A6%E5%B9%B8%E3%81%9B%E3%81%AB%E3%81%AA%E3%82%8B%28gnome-terminal%29/</guid>
      <description>

&lt;h1 id=&#34;command-normal-モードを間違う:ff449c990bbe11df9f128232db1438ac&#34;&gt;Command/Normal モードを間違う&lt;/h1&gt;

&lt;p&gt;問題はこれ。&lt;br /&gt;
頻繁にどちらのモードかを勘違いしてしまってタイプミスをしてしまう。&lt;/p&gt;

&lt;p&gt;自分はgnome-terminal上でVimを使っている。tmuxなどターミナルマルチプレクサとの共存が必要だからだ。&lt;br /&gt;
gVimではカーソル形状が 矩形と&amp;rsquo;｜&amp;rsquo;が切り替わるのだが、ターミナル上では制限があって、調べたところ簡単ではなかった。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&#34;暫定策:ff449c990bbe11df9f128232db1438ac&#34;&gt;暫定策&lt;/h1&gt;

&lt;p&gt;代替案として、 &lt;a href=&#34;https://github.com/itchyny/lightline.vim&#34;&gt;lightline.vim&lt;/a&gt;を使ってInsert/Normal モードの状態を色付きで
画面下部に表示し、視覚的に理解しやすいように試みた。&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/92223ba03c523c28e705980706a3a7e9.png&#34; alt=&#34;lightline&#34; /&gt;
確かにわかりやすいが、画面の端の色なので、気づかずにミスタイプになることも多い。&lt;/p&gt;

&lt;p&gt;また、横のラインを表示・非表示を( &lt;code&gt;autocmd InsertEnter,InsertLeave * set cursorline!&lt;/code&gt; )で切り替える
アプローチも試みたが、モード間違いは大きく改善はしなかった。&lt;/p&gt;

&lt;h1 id=&#34;救世主:ff449c990bbe11df9f128232db1438ac&#34;&gt;救世主&lt;/h1&gt;

&lt;p&gt;これまでかと思った矢先に、救世主が現れた(stackoverflowで記事を見つけた)&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;To change the shape of the cursor in different modes, you can add the following into your vimrc.
For the Gnome-Terminal (version 2.26)Edit&lt;/p&gt;
&lt;/blockquote&gt;

&lt;pre&gt;&lt;code class=&#34;language-vim&#34;&gt;if has(&amp;quot;autocmd&amp;quot;)
au InsertEnter * silent execute &amp;quot;!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam&amp;quot;
au InsertLeave * silent execute &amp;quot;!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block&amp;quot;
au VimLeave * silent execute &amp;quot;!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam&amp;quot;
endif
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://i.gyazo.com/523d7f4dc324943c6d55f00b69f4fa8b.png&#34; alt=&#34;insert&#34; /&gt;
&lt;img src=&#34;http://i.gyazo.com/d8fb66d045fdc0b3ce9470d058bfe81e.png&#34; alt=&#34;normal&#34; /&gt;&lt;br /&gt;
すばらしい。&lt;br /&gt;
グローバルな設定を書き換える力技だが、キニシナイ。&lt;/p&gt;

&lt;h1 id=&#34;special-thanks:ff449c990bbe11df9f128232db1438ac&#34;&gt;special thanks&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Lightline(&lt;a href=&#34;https://github.com/itchyny/lightline.vim&#34;&gt;https://github.com/itchyny/lightline.vim&lt;/a&gt; )&lt;/li&gt;
&lt;li&gt;Stackoverflow(&lt;a href=&#34;http://stackoverflow.com/a/6488717/4040150&#34;&gt;http://stackoverflow.com/a/6488717/4040150&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AngularでのDOMへのアクセス</title>
      <link>https://iberianpig.github.io/posts/2015-04-13-angular%E3%81%A7%E3%81%AEdom%E3%81%B8%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9/</link>
      <pubDate>Mon, 13 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://iberianpig.github.io/posts/2015-04-13-angular%E3%81%A7%E3%81%AEdom%E3%81%B8%E3%81%AE%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B9/</guid>
      <description>&lt;p&gt;AngularがDOMのdata-x属性の値を取得する必要があったのでメモ。&lt;/p&gt;

&lt;p&gt;今回はdata-x属性内のハッシュ構造のデータを取り出す必要があった。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;&amp;lt;SELECTOR data-x = &#39;{&amp;quot;id&amp;quot;:&amp;quot;123&amp;quot;, &amp;quot;name&amp;quot;:&amp;quot;hoge&amp;quot;}&#39;...&amp;gt;&lt;/code&gt;というDOM要素が存在した時&lt;/p&gt;

&lt;p&gt;&lt;code&gt;str = angular.element(&#39;SELECTOR&#39;).attr(&#39;data-x&#39;)&lt;/code&gt;のような形式でデータを取得することができる。&lt;/p&gt;

&lt;p&gt;しかしこの状態ではstrはただの文字列として取得した状態なので、ハッシュを取り出すにはパースしてあげる必要がある。&lt;/p&gt;

&lt;p&gt;&lt;code&gt;hashed_data = angular.fomJson(str)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;これで&lt;code&gt;hashed_data = {&amp;quot;id&amp;quot;:&amp;quot;123&amp;quot;, &amp;quot;name&amp;quot;:&amp;quot;hoge&amp;quot;}&lt;/code&gt;が取得できる。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>